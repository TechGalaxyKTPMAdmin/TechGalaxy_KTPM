services:
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    environment:
      STORAGE_TYPE: mem
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9411/api/v2/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - spring-net

  discoveryserver:
    build:
      context: .
      dockerfile: DiscoveryServer/Dockerfile
    container_name: discoveryserver
    ports:
      - "8761:8761"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - spring-net

  configserver:
    build:
      context: .
      dockerfile: ConfigServer/Dockerfile
    container_name: configserver
    ports:
      - "8888:8888"
    depends_on:
      discoveryserver:
        condition: service_healthy
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discoveryserver:8761/eureka
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - spring-net

  apigateway:
    build:
      context: .
      dockerfile: APIGateway/Dockerfile
    container_name: apigateway
    ports:
      - "8081:8081"
    depends_on:
      discoveryserver:
        condition: service_healthy
      redis-ktpm:
        condition: service_healthy
    environment:
      SPRING_CONFIG_IMPORT: optional:configserver:http://configserver:8888
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discoveryserver:8761/eureka
      SPRING_DATA_REDIS_HOST: redis-ktpm
      SPRING_DATA_REDIS_PORT: 6379
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - spring-net

  
  userservice:
    build:
      context: .
      dockerfile: UserService/Dockerfile
    container_name: userservice
    ports:
      - "9001:9001"
    depends_on:
      configserver:
        condition: service_healthy
      discoveryserver:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:sqlserver://host.docker.internal:1433;databaseName=UserDB;encrypt=false
      SPRING_DATASOURCE_USERNAME: sa
      SPRING_DATASOURCE_PASSWORD: sapassword
      SPRING_CONFIG_IMPORT: optional:configserver:http://configserver:8888
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discoveryserver:8761/eureka
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9001/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - spring-net 

  redis-ktpm:
    image: redis:7.2
    container_name: redis-ktpm
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - spring-net

networks:
  spring-net:
    driver: bridge

volumes:
  redis-data: