input {
  # JSON logs
  file {
    path => "/logs/*/*-json.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => json
    type => "json"
  }

  # Plain text logs
  file {
    path => "/logs/*/*.log"
    exclude => ["*-json.log"]
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => multiline {
      pattern => "^\d{4}-\d{2}-\d{2} "
      negate => true
      what => "previous"
    }
    type => "plain"
  }
}

filter {
  # Extract service_name from log file path
  grok {
    match => { "path" => "/logs/(?<service_name>[^/]+)/" }
  }

  if [type] == "plain" {
    grok {
      match => {
        "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} (?:%{POSINT:pid})? --- \[%{DATA:thread}\] %{JAVACLASS:logger} ?: %{GREEDYDATA:logMessage}"
      }
    }

    date {
      match => ["timestamp", "yyyy-MM-dd HH:mm:ss.SSS"]
      target => "@timestamp"
    }

    mutate {
      rename => { "logMessage" => "message_content" }
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "techgalaxy-logs-%{+YYYY.MM.dd}"
  }

  stdout {
    codec => rubydebug
  }
}
